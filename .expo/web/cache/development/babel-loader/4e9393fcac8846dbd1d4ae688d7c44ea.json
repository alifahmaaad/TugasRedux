{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INCREMENT, DECREMENT } from \"./tipe\";\nvar INITIAL_STATE = {\n  count: 0\n};\nexport var counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: action.data + 1\n      });\n\n    case DECREMENT:\n      console.log(\"bangstatsatsataw\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: action.data - 1\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/MICROSOFT/Desktop/GAMES/KULIAH/Pengembangan Aplikasi Mobile/00_APP/coba/redux/counterReducer.js"],"names":["INCREMENT","DECREMENT","INITIAL_STATE","count","counterReducer","state","action","type","data","console","log"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAmBC,SAAnB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAG;AADU,CAAtB;AAIA,OAAO,IAAMC,cAAc,GAAC,SAAfA,cAAe,GAAiC;AAAA,MAAhCC,KAAgC,uEAAzBH,aAAyB;AAAA,MAAVI,MAAU;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,SAAL;AACI,6CAAWK,KAAX;AAAiBF,QAAAA,KAAK,EAACG,MAAM,CAACE,IAAP,GAAc;AAArC;;AAEJ,SAAKP,SAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,6CAAWL,KAAX;AAAiBF,QAAAA,KAAK,EAACG,MAAM,CAACE,IAAP,GAAc;AAArC;;AAEJ;AACI,aAAOH,KAAP;AATR;AAYH,CAbM","sourcesContent":["import { INCREMENT,DECREMENT} from './tipe'\r\n\r\nconst INITIAL_STATE = {\r\n    count : 0\r\n};\r\n\r\nexport const counterReducer=(state= INITIAL_STATE, action)=> {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return {...state,count:action.data + 1}\r\n          \r\n        case DECREMENT:\r\n            console.log(\"bangstatsatsataw\")\r\n            return {...state,count:action.data - 1}\r\n          \r\n        default:\r\n            return state;\r\n          \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}