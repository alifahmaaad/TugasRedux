{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_FOOD, DELETE_FOOD } from \"./types\";\nvar initialState = {\n  foodList: []\n};\n\nvar foodReducer = function foodReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_FOOD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        foodList: state.foodList.concat({\n          key: Math.random(),\n          name: action.data\n        })\n      });\n\n    case DELETE_FOOD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        foodList: state.foodList.filter(function (item) {\n          return item.key !== action.key;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default foodReducer;","map":{"version":3,"sources":["C:/Users/MICROSOFT/Desktop/GAMES/KULIAH/Pengembangan Aplikasi Mobile/00_APP/coba/redux/listReducer.jsx"],"names":["ADD_FOOD","DELETE_FOOD","initialState","foodList","foodReducer","state","action","type","concat","key","Math","random","name","data","filter","item"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,QAAL;AACE,6CACKK,KADL;AAEEF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAsB;AAC9BC,UAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EADyB;AAE9BC,UAAAA,IAAI,EAAEN,MAAM,CAACO;AAFiB,SAAtB;AAFZ;;AAOF,SAAKZ,WAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeW,MAAf,CAAsB,UAACC,IAAD;AAAA,iBAC9BA,IAAI,CAACN,GAAL,KAAaH,MAAM,CAACG,GADU;AAAA,SAAtB;AAFZ;;AAKF;AACE,aAAOJ,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["import { ADD_FOOD, DELETE_FOOD } from './types';\n\nconst initialState = {\n  foodList: []\n}\n\nconst foodReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FOOD:\n      return {\n        ...state,\n        foodList: state.foodList.concat({\n          key: Math.random(),\n          name: action.data\n        })\n      };\n    case DELETE_FOOD:\n      return {\n        ...state,\n        foodList: state.foodList.filter((item) =>\n          item.key !== action.key)\n      };\n    default:\n      return state;\n  }\n}\n\nexport default foodReducer;"]},"metadata":{},"sourceType":"module"}